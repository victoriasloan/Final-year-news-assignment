"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = AnalogClockLayout;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function renderNotches(_ref) {
    var smallTick = _ref.smallTick;
    var largeTick = _ref.largeTick;

    var notches = [];
    for (var i = 0; i < 60; i++) {
        var style = Object.assign({}, i % 5 === 0 ? largeTick : smallTick, {
            transform: "translateX(-50%) translateY(-100%) rotate(" + i * 6 + "deg)"
        });
        notches.push(_react2.default.createElement("span", { key: i, style: style }));
    }
    return notches;
}

function AnalogClockLayout(_ref2) {
    var hour = _ref2.hour;
    var minutes = _ref2.minutes;
    var seconds = _ref2.seconds;
    var styles = _ref2.styles;

    // +1 to center align
    var secondStyle = Object.assign({}, styles.second, {
        transform: "translateX(-50%) translateY(-100%) rotate(" + (seconds * 6 + 1) + "deg)"
    });
    // +1 to center align
    var minuteStyle = Object.assign({}, styles.minute, {
        transform: "translateX(-50%) translateY(-100%) rotate(" + (minutes * 6 + 1) + "deg)"
    });
    // +1.5 to center align
    var hourStyle = Object.assign({}, styles.hour, {
        transform: "translateX(-50%) translateY(-100%) rotate(" + (hour * 30 + 1.5) + "deg)"
    });
    return _react2.default.createElement(
        "div",
        { style: styles.base },
        _react2.default.createElement("div", { "data-testid": "seconds", style: secondStyle }),
        _react2.default.createElement("div", { "data-testid": "minutes", style: minuteStyle }),
        _react2.default.createElement("div", { "data-testid": "hour", style: hourStyle }),
        _react2.default.createElement("div", { style: styles.center }),
        renderNotches(styles)
    );
}

AnalogClockLayout.propTypes = {
    hour: _react.PropTypes.number.isRequired,
    minutes: _react.PropTypes.number.isRequired,
    seconds: _react.PropTypes.number.isRequired,
    styles: _react.PropTypes.shape({
        second: _react.PropTypes.object.isRequired,
        minute: _react.PropTypes.object.isRequired,
        hour: _react.PropTypes.object.isRequired
    }).isRequired
};