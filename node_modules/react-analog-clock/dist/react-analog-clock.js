(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactSexyClock"] = factory(require("react"));
	else
		root["ReactSexyClock"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Themes = undefined;

	var _AnalogClock = __webpack_require__(3);

	var _AnalogClock2 = _interopRequireDefault(_AnalogClock);

	var _themes = __webpack_require__(1);

	var ClockThemes = _interopRequireWildcard(_themes);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Themes = exports.Themes = ClockThemes;
	exports.default = _AnalogClock2.default;

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var light = exports.light = {
	    background: '#fff',
	    border: '#ececec',
	    center: '#000',
	    seconds: '#f56c6c',
	    minutes: '#ccc',
	    hour: '#000',
	    tick: '#000'
	};

	var dark = exports.dark = {
	    background: '#000',
	    border: '#000',
	    center: '#fff',
	    seconds: '#fff',
	    minutes: '#ccc',
	    hour: '#fff',
	    tick: '#fff'
	};

	var aqua = exports.aqua = {
	    background: '#eaeaea',
	    border: '#3dd4c1',
	    center: '#000',
	    seconds: '#f56c6c',
	    minutes: '#9c9c9c',
	    hour: '#000',
	    tick: '#000'
	};

	var lime = exports.lime = {
	    background: '#a4f181',
	    border: '#fff',
	    center: '#ccc',
	    seconds: '#fff',
	    minutes: '#ccc',
	    hour: '#fff',
	    tick: '#fff'
	};

	var sherbert = exports.sherbert = {
	    background: 'linear-gradient(to left, #fee , #ddefbb)',
	    border: '#fff',
	    center: '#fff',
	    seconds: '#fff',
	    minutes: '#ccc',
	    hour: '#fff',
	    tick: '#fff'
	};

	var navy = exports.navy = {
	    background: 'linear-gradient(#2a70a0,#102d42)',
	    border: '#fff',
	    center: '#fff',
	    seconds: '#fff',
	    minutes: '#ccc',
	    hour: '#fff',
	    tick: '#fff'
	};

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _AnalogClockLayout = __webpack_require__(4);

	var _AnalogClockLayout2 = _interopRequireDefault(_AnalogClockLayout);

	var _styles = __webpack_require__(5);

	var _styles2 = _interopRequireDefault(_styles);

	var _util = __webpack_require__(6);

	var _themes = __webpack_require__(1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AnalogClock = function (_Component) {
	    _inherits(AnalogClock, _Component);

	    function AnalogClock(props) {
	        _classCallCheck(this, AnalogClock);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AnalogClock).call(this));

	        var date = new Date();
	        _this.state = {
	            seconds: date.getSeconds(),
	            minutes: date.getMinutes(),
	            hour: date.getHours()
	        };

	        _this.styles = (0, _util.cssTransform)(_styles2.default, props);
	        return _this;
	    }

	    _createClass(AnalogClock, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            this.interval = setInterval(function () {
	                _this2.setState((0, _util.updateTime)(_this2.state));
	            }, 1000);
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            this.styles = (0, _util.cssTransform)(_styles2.default, nextProps);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            clearInterval(this.interval);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(_AnalogClockLayout2.default, _extends({}, this.state, { styles: this.styles }));
	        }
	    }]);

	    return AnalogClock;
	}(_react.Component);

	exports.default = AnalogClock;


	AnalogClock.propTypes = {
	    theme: _react.PropTypes.shape({
	        background: _react.PropTypes.string.isRequired,
	        border: _react.PropTypes.string.isRequired,
	        center: _react.PropTypes.string.isRequired,
	        seconds: _react.PropTypes.string.isRequired,
	        minutes: _react.PropTypes.string.isRequired,
	        hour: _react.PropTypes.string.isRequired,
	        tick: _react.PropTypes.string.isRequired
	    }),
	    width: _react.PropTypes.number
	};

	AnalogClock.defaultProps = {
	    theme: _themes.dark,
	    width: 400
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = AnalogClockLayout;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function renderNotches(_ref) {
	    var smallTick = _ref.smallTick;
	    var largeTick = _ref.largeTick;

	    var notches = [];
	    for (var i = 0; i < 60; i++) {
	        var style = Object.assign({}, i % 5 === 0 ? largeTick : smallTick, {
	            transform: "translateX(-50%) translateY(-100%) rotate(" + i * 6 + "deg)"
	        });
	        notches.push(_react2.default.createElement("span", { key: i, style: style }));
	    }
	    return notches;
	}

	function AnalogClockLayout(_ref2) {
	    var hour = _ref2.hour;
	    var minutes = _ref2.minutes;
	    var seconds = _ref2.seconds;
	    var styles = _ref2.styles;

	    // +1 to center align
	    var secondStyle = Object.assign({}, styles.second, {
	        transform: "translateX(-50%) translateY(-100%) rotate(" + (seconds * 6 + 1) + "deg)"
	    });
	    // +1 to center align
	    var minuteStyle = Object.assign({}, styles.minute, {
	        transform: "translateX(-50%) translateY(-100%) rotate(" + (minutes * 6 + 1) + "deg)"
	    });
	    // +1.5 to center align
	    var hourStyle = Object.assign({}, styles.hour, {
	        transform: "translateX(-50%) translateY(-100%) rotate(" + (hour * 30 + 1.5) + "deg)"
	    });
	    return _react2.default.createElement(
	        "div",
	        { style: styles.base },
	        _react2.default.createElement("div", { "data-testid": "seconds", style: secondStyle }),
	        _react2.default.createElement("div", { "data-testid": "minutes", style: minuteStyle }),
	        _react2.default.createElement("div", { "data-testid": "hour", style: hourStyle }),
	        _react2.default.createElement("div", { style: styles.center }),
	        renderNotches(styles)
	    );
	}

	AnalogClockLayout.propTypes = {
	    hour: _react.PropTypes.number.isRequired,
	    minutes: _react.PropTypes.number.isRequired,
	    seconds: _react.PropTypes.number.isRequired,
	    styles: _react.PropTypes.shape({
	        second: _react.PropTypes.object.isRequired,
	        minute: _react.PropTypes.object.isRequired,
	        hour: _react.PropTypes.object.isRequired
	    }).isRequired
	};

/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var AnalogBase = {
	    background: function background(s) {
	        return s.theme.background;
	    },
	    backgroundSize: 'cover',
	    backgroundPosition: 'center',
	    borderRadius: '100%',
	    border: function border(s) {
	        return s.width / 20 + 'px solid ' + s.theme.border;
	    },
	    height: function height(s) {
	        return s.width;
	    },
	    position: 'relative',
	    width: function width(s) {
	        return s.width;
	    }
	};

	var AnalogCenter = {
	    background: function background(s) {
	        return s.theme.center;
	    },
	    borderRadius: '100%',
	    height: '12px',
	    left: '50%',
	    position: 'absolute',
	    top: '50%',
	    transform: 'translateX(-50%) translateY(-50%)',
	    width: '12px'
	};

	var AnalogHand = {
	    left: '50%',
	    position: 'absolute',
	    top: '50%',
	    transformOrigin: '50% 100%'
	};

	var AnalogSecondHand = Object.assign({}, AnalogHand, {
	    background: function background(s) {
	        return s.theme.seconds;
	    },
	    height: function height(s) {
	        return Math.floor(s.width * 0.425);
	    },
	    width: 3
	});

	var AnalogMinuteHand = Object.assign({}, AnalogHand, {
	    background: function background(s) {
	        return s.theme.minutes;
	    },
	    height: function height(s) {
	        return Math.floor(s.width * 0.35);
	    },
	    width: 6
	});

	var AnalogHourHand = Object.assign({}, AnalogHand, {
	    background: function background(s) {
	        return s.theme.hour;
	    },
	    height: function height(s) {
	        return Math.floor(s.width * 0.2);
	    },
	    width: 8
	});

	var AnalogSmallTick = {
	    background: function background(s) {
	        return s.theme.tick;
	    },
	    height: 6,
	    left: '50%',
	    position: 'absolute',
	    top: 6,
	    transformOrigin: function transformOrigin(s) {
	        return '0 ' + Math.ceil(s.width / 2) + 'px';
	    },
	    width: 2
	};

	var AnalogLargeTick = {
	    background: function background(s) {
	        return s.theme.tick;
	    },
	    height: 10,
	    left: function left(s) {
	        return Math.ceil(s.width / 2) + 2;
	    },
	    position: 'absolute',
	    top: 10,
	    transformOrigin: function transformOrigin(s) {
	        return '0 ' + Math.ceil(s.width / 2) + 'px';
	    },
	    width: 4
	};

	exports.default = {
	    base: AnalogBase,
	    center: AnalogCenter,
	    second: AnalogSecondHand,
	    minute: AnalogMinuteHand,
	    hour: AnalogHourHand,
	    smallTick: AnalogSmallTick,
	    largeTick: AnalogLargeTick
	};

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.cssTransform = cssTransform;
	exports.updateTime = updateTime;
	function cssTransform(styles, props) {
	    return Object.keys(styles).reduce(function (newStyles, rootKey) {
	        var style = styles[rootKey];
	        newStyles[rootKey] = Object.keys(style).reduce(function (newStyle, key) {
	            if (typeof style[key] === 'function') {
	                newStyle[key] = style[key](props);
	            } else {
	                newStyle[key] = style[key];
	            }
	            return newStyle;
	        }, {});
	        return newStyles;
	    }, {});
	}

	function updateTime(_ref) {
	    var seconds = _ref.seconds;
	    var minutes = _ref.minutes;
	    var hour = _ref.hour;

	    seconds += 1;
	    if (seconds === 60) {
	        seconds = 0;
	        minutes += 1;
	    }
	    if (minutes === 60) {
	        minutes = 0;
	        hour += 1;
	    }
	    if (hour === 12) {
	        hour = 0;
	    }
	    return { seconds: seconds, minutes: minutes, hour: hour };
	}

/***/ }
/******/ ])
});
;